# -*- coding: utf-8 -*-
"""mutli-modal.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19rboBtw_OXUTpQkFPFZCpeDEuViC9kZI
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.preprocessing import MinMaxScaler

# Ignore warnings for cleaner output
import warnings
warnings.filterwarnings("ignore")

"""Data cleaning"""

dataF = pd.read_csv('/content/drive/MyDrive/labels_brset.csv', sep = ',')
dataF.head()

print(dataF.columns)

dataF.describe()

dataF.info()

dataF = dataF.drop(columns=['image_id', 'patient_id', 'camera', 'nationality', 'focus', 'Illuminaton', 'image_field', 'artifacts', 'quality', 'other'])
dataF.info()

"""the age : can filled by the mean for each gender"""

dataF['patient_age'] = dataF.groupby('patient_sex')['patient_age'].transform(lambda x: x.fillna(x.mean()))
dataF['patient_age'].describe()

"""extract all data from the field comorbidities"""

print(dataF['comorbidities'])

comorbidities_split = dataF['comorbidities'].str.split(', ', expand=True)
comorbidities_split.tail()

"""replace and fill the missing value for the column diabetes_time_y"""

print(dataF['diabetes_time_y'].unique())

dataF['diabetes_time_y'] = dataF['diabetes_time_y'].replace('NÃ£o', np.nan)
dataF['diabetes_time_y']

print(dataF['diabetes_time_y'].unique())

print(dataF['diabetes_time_y'].apply(type).value_counts())

dataF['diabetes_time_y'].describe()

dataF['patient_age'].describe()

dataF['diabetes_time_y'] = pd.to_numeric(dataF['diabetes_time_y'], errors='coerce')

# Filter out rows where diabetes_time_y is NaN
valid_rows = dataF[dataF['diabetes_time_y'].notna()]
# check for invalid rows where diabetes_time_y > patient_age
invalid_rows = valid_rows[valid_rows['diabetes_time_y'] > valid_rows['patient_age']]
print(invalid_rows[['diabetes_time_y', 'patient_age']])